events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar <- append(calendar, calendar_list)
print(c(year[i], month[j]))
}
}
calendar
head(calendar)
calendar_df <- data.frame(
Date = unlist(calendar[grep("Date", names(calendar))]),
Festivity = unlist(calendar[grep("Festivity", names(calendar))]),
stringsAsFactors = FALSE
)
Date = unlist(calendar[grep("Date", names(calendar))]),
Date = unlist(calendar[grep("Date", names(calendar))])
Festivity = unlist(calendar[grep("Festivity", names(calendar))])
Date
Festivity
length(Date)
length(Festivity)
cbind(Date, Festivity)
tail(cbind(Date, Festivity))
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar_list
unlist(calendar_list)
c(calendar_list)
as.vector(calendar.list)
as.vector(calendar_list)
calendar <- append(calendar, unlist(calendar_list))
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
calendar <- list()
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar <- append(calendar, unlist(calendar_list))
calendar
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
k <- 1
calendar <- vector("list", length = length(year)*length(month))
calendar
i <- 1
j <- 1
k <- 1
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar[[k]] <- unlist(calendar_list)
head(calendar)
# Combina le informazioni in un data frame
calendar_list <- c(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar_list
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
k <- 1
calendar <- vector("list", length = length(year)*length(month))
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
festivities
Date
dates
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar_list
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
k <- 1
calendar <- vector("list", length = length(year)*length(month))
for(i in 1:length(year)){
for(j in 1:length(month)){
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar[[k]] <- calendar_list
k <- k + 1
print(c(year[i], month[j]))
print(calendar)
}
}
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
k <- 1
calendar <- vector("list", length = length(year)*length(month))
for(i in 1:length(year)){
for(j in 1:length(month)){
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar[[k]] <- calendar_list
k <- k + 1
print(c(year[i], month[j]))
print(calendar[[k]])
}
}
head(calendar)
rm(list = ls())
if(!require(rvest)) install.packages("rvest")
if(!require(xml2)) install.packages("xml2")
library(stringr)
library(dplyr)
year <- 1989:2023
month <- c("January",
"February",
"March",
"April",
"May",
"June",
"July",
"August",
"September",
"October",
"November",
"December")
i <- 1
j <- 1
k <- 1
calendar <- vector("list", length = length(year)*length(month))
for(i in 1:length(year)){
for(j in 1:length(month)){
# URL del sito
url <- paste0("https://www.islamicfinder.org/islamic-calendar/", year[i],"/", month[j], "/?type=Gregorian")
# Leggi la pagina HTML
page <- read_html(url)
# Estrai le celle che contengono eventi
events <- page %>%
html_nodes("td.event")  # Seleziona i nodi <td> con la classe "event"
# Estrai le date e i nomi delle festività
dates <- events %>%
html_node("h4") %>%  # Cerca il nodo <h4> per il giorno
html_text() %>%      # Estrai il testo
as.integer()         # Converti in numerico
# Ripulisci i testi estratti
festivities <- events %>%
html_node("p") %>%   # Cerca il nodo <p> per il nome della festività
html_text() %>%      # Estrai il testo
str_squish()         # Rimuove spazi e caratteri di controllo extra
# Combina le informazioni in un data frame
calendar_list <- list(
Date = paste0(paste0(year[i], "-", if(j < 10) paste0("0", j) else paste0(j), "-"), sprintf("%02d", dates)),  # Combina l'anno, il mese e il giorno
Festivity = festivities
)
calendar[[k]] <- calendar_list
k <- k + 1
print(c(year[i], month[j]))
print(calendar_list)
}
}
calendar
lapply(calendar, class)
table(lapply(calendar, class))
table(lapply(calendar, class))
table(unlist(lapply(calendar, class)))
calendar
lapply(calendar, length)
unlist(lapply(calendar, length))
Date = unlist(calendar[grep("Date", names(calendar))])
Festivity = unlist(calendar[grep("Festivity", names(calendar))])
length(Date)
Date
calendar[[1]]
lapply(calendar, function(x) rbind(x[1], x[2]))
lapply(calendar, function(x) cbind(x[1], x[2]))
do.call(rbind, lapply(calendar, function(x) cbind(x[1], x[2])))
data.frame(do.call(rbind, lapply(calendar, function(x) cbind(x[1], x[2]))))
View(data.frame(do.call(rbind, lapply(calendar, function(x) cbind(x[1], x[2])))))
calendar[[139]]
try <- data.frame(do.call(rbind, lapply(calendar, function(x) cbind(x[1], x[2]))))
dim(try)
lapply(try, class)
apply(try, 1, class)
View(try)
calendar[[1]]
lapply(calendar, function(x) x[grep("Date")])
lapply(calendar, function(x) x[grep("Date", names(x))])
lapply(calendar, function(x) {
dates <- x[grep("Date", names(x))]
festivities <-x[grep("Festivity", names(x))]
cbind(dates, festivities)})
calendar_1 <- lapply(calendar, function(x) {
dates <- x[grep("Date", names(x))]
festivities <-x[grep("Festivity", names(x))]
cbind(dates, festivities)})
calendar_1[120:140]
calendar_1[[140]]
class(calendar_1[[140]])
calendar_1[[140]]
calendar_1[[140]] == "character,2"
str(calendar)
str(calendar[[135:145]])
str(calendar[135:145])
x <- calendar[[135]]
x
x <- calendar[[140]]
x
cbind(x$Date, x$Festivity)
dates <- x[grep("Date", names(x))]
festivities <-x[grep("Festivity", names(x))]
dates
cbind(dates, festivities)
calendar_1 <- lapply(calendar, function(x) {
dates <- unlist(x[grep("Date", names(x))])
festivities <- unlist(x[grep("Festivity", names(x))])
cbind(dates, festivities)})
calendar_1
do.call(rbind, calendar_1)
calendar_1
do.call(rbind, calendar_1)
lapply(calendar_1, ncol)
unlist(lapply(calendar_1, ncol))
table(unlist(lapply(calendar_1, ncol)))
which(table(unlist(lapply(calendar_1, ncol))) == 1)
which(unlist(lapply(calendar_1, ncol)) == 1)
calendar_1[[74]]
calendar_1
which(unlist(lapply(calendar_1, ncol)) == 1)
calendar_1[[206]]
which(unlist(lapply(calendar_1, ncol)) == 1)
non_ok <- which(unlist(lapply(calendar_1, ncol)) == 1)
calendar_1[-non_ok]
do.call(rbind, calendar_1[-non_ok])
isl_cal <- as.data.frame(do.call(rbind, calendar_1[-non_ok]))
isl_cal
rownames(isl_cal) <- NULL
colnames(isl_cal)
dim(isl_cal)
isl_cal
head(isl_cal)
table(isl_cal$festivities)
isl_cal$dates
isl_cal
write.csv(isl_cal, file = "isl_cal1.csv", row.names = F)
